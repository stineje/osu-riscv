
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module riscv_top(

		 //////////// CLOCK //////////
		 OSC_50_BANK5,

		 //////////// LED x 8 //////////
		 LED,

		 //////////// BUTTON x 4, EXT_IO and CPU_RESET_n //////////
		 CPU_RESET_n,

		 //////////// DIP SWITCH x 8 //////////
		 SW,

		 //////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
		 GPIO0GPIO,

		 //////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
		 GPIO1GPIO 
		 );

   //=======================================================
   //  PARAMETER declarations
   //=======================================================


   //=======================================================
   //  PORT declarations
   //=======================================================

   //////////// CLOCK //////////
   input 		          		OSC_50_BANK5;

   //////////// LED x 8 //////////
   output [7:0] 				LED;

   //////////// BUTTON x 4, EXT_IO and CPU_RESET_n //////////
   input 		          		CPU_RESET_n;

   //////////// DIP SWITCH x 8 //////////
   input [7:0] 					SW;

   //////////// GPIO_0, GPIO_0 connect to GPIO Default //////////
   inout [35:0] 				GPIO0GPIO;

   //////////// GPIO_1, GPIO_1 connect to GPIO Default //////////
   inout [35:0] 				GPIO1GPIO;


   //=======================================================
   //  REG/WIRE declarations
   //=======================================================




   //=======================================================
   //  External PLL Configuration ==========================
   //=======================================================

   //  Signal declarations
   wire [ 3: 0] 				clk1_set_wr, clk2_set_wr, clk3_set_wr;
   wire 					rstn;
   wire 					conf_ready;
   wire 					counter_max;
   wire [7:0] 					counter_inc;
   reg [7:0] 					auto_set_counter;
   reg 						conf_wr;
   logic 					cpu_reset;
   logic 					clk_20mhz;
   logic 					pll_locked;
   logic 					riscv_areset;
   

   pll20mhz internal_pll(.areset(cpu_reset),
			 .inclk0(OSC_50_BANK5),
			 .c0(clk_20mhz),
			 .locked(pll_locked));

   assign cpu_reset = ~ CPU_RESET_n;

   assign rstn = CPU_RESET_n;

   //=======================================================
   //  top level of riscv design
   //=======================================================

   assign riscv_areset = pll_locked | ~rstn;
   

   top_mram riscv_top(.clk(clk_20mhz),
		      .areset(riscv_areset),
		      .suspend(GPIO0GPIO[0]),
		      .PROGRAM(SW[0]),
		      .sclk(GPIO0GPIO[1]),
		      .mosi(GPIO0GPIO[2]),
		      .miso(GPIO0GPIO[3]),
		      .ss(GPIO0GPIO[4]),
		      .maddr(GPIO0GPIO[20:5]),
		      .mdata(GPIO1GPIO[31:0]),
		      .webar(GPIO0GPIO[21]),
		      .rebar(GPIO0GPIO[22]),
		      .gclk(GPIO0GPIO[23]),
		      .gpo(GPIO0GPIO[27:24]),
		      .gpi(GPIO0GPIO[31:28]));
   
   
   
   assign LED   = 8'b10101010;
   
   assign GPIO0GPIO[35:32] = 0;
   assign GPIO1GPIO[35:32] = 0;

endmodule
